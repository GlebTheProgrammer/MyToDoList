{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gleb\\\\Desktop\\\\reactCRUDapp\\\\to-do-app\\\\client\\\\src\\\\components\\\\ListItem.js\",\n  _s = $RefreshSig$();\nimport TickIcon from './TickIcon';\nimport ProgressBar from './ProgressBar';\nimport Modal from './Modal';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListItem = _ref => {\n  _s();\n  let {\n    task,\n    getData\n  } = _ref;\n  const [showModal, setShowModal] = useState(false);\n  const deleteItem = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/todos/${task.id}`, {\n        method: 'DELETE'\n      });\n      if (response.status === 200) {\n        getData();\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"list-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: [/*#__PURE__*/_jsxDEV(TickIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"task-title\",\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit\",\n        onClick: () => setShowModal(true),\n        children: \"EDIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete\",\n        onClick: deleteItem,\n        children: \"DELETE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      mode: 'edit',\n      setShowModal: setShowModal,\n      getData: getData,\n      task: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(ListItem, \"uVlnG5KLfXemZk5i5Fl+Cg356FU=\");\n_c = ListItem;\nexport default ListItem;\nvar _c;\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"names":["TickIcon","ProgressBar","Modal","useState","ListItem","task","getData","showModal","setShowModal","deleteItem","response","fetch","process","env","REACT_APP_SERVERURL","id","method","status","err","console","error","title"],"sources":["C:/Users/Gleb/Desktop/reactCRUDapp/to-do-app/client/src/components/ListItem.js"],"sourcesContent":["import TickIcon from './TickIcon'\r\nimport ProgressBar from './ProgressBar'\r\nimport Modal from './Modal'\r\nimport { useState } from 'react'\r\n\r\nconst ListItem = ({task, getData}) => {\r\n  const [showModal, setShowModal] = useState(false)\r\n\r\n  const deleteItem = async() => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/todos/${task.id}`, {\r\n        method: 'DELETE'\r\n      })\r\n      if (response.status === 200) {\r\n        getData()\r\n      }\r\n    } catch(err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li className=\"list-item\">\r\n\r\n      <div className=\"info-container\">\r\n        <TickIcon/>\r\n        <p className=\"task-title\">{task.title}</p>\r\n        <ProgressBar/>\r\n      </div>\r\n\r\n      <div className='button-container'>\r\n        <button className='edit' onClick={() => setShowModal(true)}>EDIT</button>\r\n        <button className='delete' onClick={deleteItem}>DELETE</button>\r\n      </div>\r\n      {showModal && <Modal mode={'edit'} setShowModal={setShowModal} getData={getData} task={task}/>}\r\n    </li>\r\n  )\r\n}\r\n  \r\n  export default ListItem\r\n  "],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,OAAO;AAAA;AAEhC,MAAMC,QAAQ,GAAG,QAAqB;EAAA;EAAA,IAApB;IAACC,IAAI;IAAEC;EAAO,CAAC;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMM,UAAU,GAAG,YAAW;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,mBAAoB,UAAST,IAAI,CAACU,EAAG,EAAC,EAAE;QAClFC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAIN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;QAC3BX,OAAO,EAAE;MACX;IACF,CAAC,CAAC,OAAMY,GAAG,EAAE;MACXC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,oBACE;IAAI,SAAS,EAAC,WAAW;IAAA,wBAEvB;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAE,eACX;QAAG,SAAS,EAAC,YAAY;QAAA,UAAEb,IAAI,CAACgB;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,eAC1C,QAAC,WAAW;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACV,eAEN;MAAK,SAAS,EAAC,kBAAkB;MAAA,wBAC/B;QAAQ,SAAS,EAAC,MAAM;QAAC,OAAO,EAAE,MAAMb,YAAY,CAAC,IAAI,CAAE;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS,eACzE;QAAQ,SAAS,EAAC,QAAQ;QAAC,OAAO,EAAEC,UAAW;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3D,EACLF,SAAS,iBAAI,QAAC,KAAK;MAAC,IAAI,EAAE,MAAO;MAAC,YAAY,EAAEC,YAAa;MAAC,OAAO,EAAEF,OAAQ;MAAC,IAAI,EAAED;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3F;AAET,CAAC;AAAA,GAhCKD,QAAQ;AAAA,KAARA,QAAQ;AAkCZ,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
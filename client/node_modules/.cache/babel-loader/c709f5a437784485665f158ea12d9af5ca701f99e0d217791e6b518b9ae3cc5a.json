{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gleb\\\\Desktop\\\\reactCRUDapp\\\\to-do-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport ListHeader from './components/ListHeader';\nimport ListItem from './components/ListItem';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const userEmail = 'gleb15a@gmail.com';\n  const [tasks, setTasks] = useState(null);\n  const getData = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/todos/${userEmail}`);\n      const json = await response.json();\n      setTasks(json);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => getData, []);\n  console.log(tasks);\n\n  //Sort by date\n  const sortedTasks = tasks === null || tasks === void 0 ? void 0 : tasks.sort((a, b) => new Date(a.date) - new Date(b.date));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(ListHeader, {\n      listName: '🏝️ Holiday tick list',\n      getData: getData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), sortedTasks === null || sortedTasks === void 0 ? void 0 : sortedTasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n      task: task,\n      getData: getData\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 35\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"iT6JnUCBxmqntrT2KqirYr9YZr8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ListHeader","ListItem","useEffect","useState","App","userEmail","tasks","setTasks","getData","response","fetch","json","err","console","error","log","sortedTasks","sort","a","b","Date","date","map","task","id"],"sources":["C:/Users/Gleb/Desktop/reactCRUDapp/to-do-app/client/src/App.js"],"sourcesContent":["import ListHeader from './components/ListHeader'\nimport ListItem from './components/ListItem'\nimport { useEffect, useState } from 'react'\n\nconst App = () => {\n  const userEmail = 'gleb15a@gmail.com'\n  const [ tasks, setTasks ] = useState(null)\n\n\n  const getData = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/todos/${userEmail}`)\n      const json = await response.json() \n      setTasks(json)\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  useEffect(() => getData, [])\n\n  console.log(tasks)\n\n  //Sort by date\n  const sortedTasks = tasks?.sort((a,b) => new Date(a.date) - new Date(b.date))\n\n  return (\n    <div className=\"app\">\n      <ListHeader listName={'🏝️ Holiday tick list'} getData={getData} />\n      {sortedTasks?.map((task) => <ListItem key={task.id} task={task} getData={getData}/>)}\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAE3C,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAMC,SAAS,GAAG,mBAAmB;EACrC,MAAM,CAAEC,KAAK,EAAEC,QAAQ,CAAE,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAG1C,MAAMK,OAAO,GAAG,YAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BL,SAAU,EAAC,CAAC;MACxE,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,EAAE;MAClCJ,QAAQ,CAACI,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAEDV,SAAS,CAAC,MAAMM,OAAO,EAAE,EAAE,CAAC;EAE5BK,OAAO,CAACE,GAAG,CAACT,KAAK,CAAC;;EAElB;EACA,MAAMU,WAAW,GAAGV,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEW,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,CAAC;EAE7E,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,UAAU;MAAC,QAAQ,EAAE,uBAAwB;MAAC,OAAO,EAAEb;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,EAClEQ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEM,GAAG,CAAEC,IAAI,iBAAK,QAAC,QAAQ;MAAe,IAAI,EAAEA,IAAK;MAAC,OAAO,EAAEf;IAAQ,GAAtCe,IAAI,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QAAiC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAChF;AAEV,CAAC;AAAA,GA5BKpB,GAAG;AAAA,KAAHA,GAAG;AA8BT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}